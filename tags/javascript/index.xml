<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on bling on software</title>
    <link>http://bling.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on bling on software</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jun 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://bling.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>N2N: .NET 2 Node</title>
      <link>http://bling.github.io/blog/2012/06/03/n2n-net-2-node/</link>
      <pubDate>Sun, 03 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>http://bling.github.io/blog/2012/06/03/n2n-net-2-node/</guid>
      <description>&lt;p&gt;Well, it&amp;rsquo;s been quite a while since I&amp;rsquo;ve blogged about&amp;hellip;well&amp;hellip;anything, and I figured it&amp;rsquo;s about time I get off my lazy butt and do something with my spare time on weekends.  What better option than to see what all the hype is about Node?  I had to do it sooner or later.&lt;/p&gt;

&lt;p&gt;As any newbie would do, they go to Google and type &amp;ldquo;nodejs tutorial&amp;rdquo;. &lt;a href=&#34;http://www.nodebeginner.org/&#34;&gt;The Node Beginner Book&lt;/a&gt; came up first, so I went with that.  It was an excellent tutorial.  Prior to this I also skimmed through the book &lt;a href=&#34;http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742&#34;&gt;JavaScript, The Good Parts&lt;/a&gt;, so I had a basic understanding of the language syntax.&lt;/p&gt;

&lt;p&gt;One of the first oddities I noticed, was that NodeJS seems to have a convention of comma-first.  You notice this immediately because most examples start with require(‘module&amp;rsquo;), and if they require more than one module, the second line is prefixed with a comma (as opposed to the more traditional comma at the end of the line).  I apparently missed the &lt;a href=&#34;https://gist.github.com/357981&#34;&gt;discussion&lt;/a&gt; by 2 years!  It was still interesting nonetheless.&lt;/p&gt;

&lt;p&gt;As someone with a strong .NET background, I definitely experienced all the usual ‘gotchas&amp;rsquo;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;== vs ===&lt;/li&gt;
&lt;li&gt;falsey values&lt;/li&gt;
&lt;li&gt;variable hoisting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you understand all of these things, Javascript isn&amp;rsquo;t so bad.  Oh, and of course understanding closures will get you &lt;em&gt;a long&lt;/em&gt; way in being effective with Javascript, because that&amp;rsquo;s what you need to use to do proper scoping.  If C# didn&amp;rsquo;t have lambdas and closures it would have been a much longer journey to &amp;ldquo;get it&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Not too longer after, I deployed my first Heroku app running on NodeJS.&lt;/p&gt;

&lt;p&gt;Anyways, enough with the prologue&amp;hellip;I won&amp;rsquo;t bore you with anymore beginner/tutorial stuff.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s get on with what I plan on doing over a multi-part blog series. When I build something on my own time, I can&amp;rsquo;t build something just for the hell of it to learn something&amp;hellip;.that&amp;rsquo;s not enough.  If I build something it has to be useful – something that I (or someone else) will find valuable.&lt;/p&gt;

&lt;p&gt;I won&amp;rsquo;t reveal what it is yet, but it&amp;rsquo;s going to involve Node/MongoDB on the backend, with Backbone on the front-end.  Should be fun :-)&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>